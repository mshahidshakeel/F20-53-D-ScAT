{"version":3,"sources":["webpack:///src/app/components/view-all-news/view-all-news.component.ts","webpack:///src/app/components/view-all-news/view-all-news.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/raw-news.service.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/raw-news.model.ts","webpack:///src/app/components/create-news/create-news.component.ts","webpack:///src/app/components/create-news/create-news.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["ViewAllNewsComponent","newsService","channels","retrieveNews","getAll","snapshotChanges","pipe","changes","map","c","key","payload","val","subscribe","data","newsList","channel","getChannel","selector","templateUrl","styleUrls","environment","production","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","RawNewsService","db","dbRef","dbDailyTimesRef","list","rawNews","push","value","update","remove","providedIn","AppComponent","title","AppModule","initializeApp","declarations","imports","providers","bootstrap","RawNews","body","imageUrl","articleUrl","source","category","date","CreateNewsComponent","news","submitted","create","then","console","log","routes","AppRoutingModule","forRoot","relativeLinkResolution","exports","bootstrapModule","err","error","webpackEmptyAsyncContext","req","Promise","resolve","e","Error","code","keys","module","id"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Component, OnInit, Input } from '@angular/core';\nimport { RawNewsService } from 'src/app/raw-news.service';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-view-all-news',\n  templateUrl: './view-all-news.component.html',\n  styleUrls: ['./view-all-news.component.css']\n})\nexport class ViewAllNewsComponent implements OnInit {\n  newsList: any;\n  channels = ['Dawn', 'DailyTimes'];\n\n  constructor(private newsService: RawNewsService) {\n      this.retrieveNews();\n  }\n\n  ngOnInit(): void {\n  }\n\n  retrieveNews(): void {\n    this.newsService.getAll().snapshotChanges().pipe(\n      map(changes =>\n        changes.map(c =>\n          ({ key: c.payload.key, ...c.payload.val() })\n        )\n      )\n    ).subscribe(data => {\n      this.newsList = data;\n    });\n  }\n\n  search(channel: string): void {\n    this.newsService.getChannel(channel).snapshotChanges().pipe(\n      map(changes =>\n        changes.map(c =>\n          ({ key: c.payload.key, ...c.payload.val() })\n        )\n      )\n    ).subscribe(data => {\n      this.newsList = data;\n      // window.location.reload();\n    });\n  }\n}\n","<mat-toolbar color=\"primary\">\n  <button mat-button (click)=\"sidenav.toggle()\">\n      <mat-icon aria-hidden=\"false\" aria-label=\"The menu button on nav\">menu</mat-icon>\n  </button>\n  <span>S c A T</span>\n</mat-toolbar>\n\n\n\n<mat-sidenav-container class=\"news-container\">\n  <mat-sidenav #sidenav class=\"news-sidenav\">\n    <mat-list class=\"list-nav\">\n        <mat-list-item class=\"list-item\" *ngFor=\"let channel of channels\" (click)=\"search(channel);sidenav.close();\">\n\n          <div mat-card-avatar [ngStyle]=\"{'background-image': 'url(../../../assets/' + channel + '.jpg)'}\" class=\"news-header-image\"></div>\n\n          <span class=\"source-name\"> {{channel}}</span>\n\n        </mat-list-item>\n    </mat-list>\n  </mat-sidenav>\n  <mat-card class=\"news-card\"  *ngFor=\"let news of newsList\">\n    <mat-card-header>\n      <div mat-card-avatar [ngStyle]=\"{'background-image': 'url(../../../assets/images/srcicon.png)'}\" class=\"news-header-image\"></div>\n      <mat-card-title class=\"title\">{{news.title}}</mat-card-title>\n      <mat-card-subtitle>{{news.imgUrl}}</mat-card-subtitle>\n    </mat-card-header>\n    <img mat-card-image class=\"img-article\" src={{news.imgUrl}} alt=\"\">\n    <mat-card-content>\n      <p>\n        {{news.body}}\n      </p>\n    </mat-card-content>\n    <mat-card-actions class=\"action-buttons\">\n      <button mat-button color=\"primary\"><mat-icon>thumb_up_alt</mat-icon> 12 Likes</button>\n      <button mat-button color=\"primary\"><mat-icon>comment</mat-icon> Comments</button>\n      <button mat-button color=\"primary\"><mat-icon>share</mat-icon> Share</button>\n    </mat-card-actions>\n  </mat-card>\n</mat-sidenav-container>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebaseConfig: {\n    apiKey: \"AIzaSyDWjiKzadOAPnb8nEj2hmKhkL9V86n-PH0\",\n    authDomain: \"f20-53-d-scat.firebaseapp.com\",\n    databaseURL: \"https://f20-53-d-scat.firebaseio.com\",\n    projectId: \"f20-53-d-scat\",\n    storageBucket: \"f20-53-d-scat.appspot.com\",\n    messagingSenderId: \"206426422746\",\n    appId: \"1:206426422746:web:f130267066f00a021e14e3\",\n    measurementId: \"G-9XQXMWXHSZ\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { AngularFireDatabase, AngularFireList } from '@angular/fire/database';\nimport { RawNews } from 'src/app/raw-news.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RawNewsService {\n  private dbRef: AngularFireList<RawNews> = null;\n  private dbDailyTimesRef: AngularFireList<RawNews> = null;\n\n  constructor(private db: AngularFireDatabase) {\n    // Extract Root Data\n    this.dbRef = this.db.list(\"/DailyTimes/Sport/2020-10-31 05:59:00\");\n    this.dbDailyTimesRef = this.db.list(\"/DailyTimes/Sports/2020-10-30 21:27:00\");\n   }\n\n   getAll(): AngularFireList<RawNews> {\n    return this.dbRef;\n  }\n\n  getChannel(channel: string): AngularFireList<RawNews> {\n    if (channel == \"DailyTimes\"){\n        return this.dbRef;\n    }\n    \n    return this.dbRef;\n    \n  }\n\n  create(rawNews: RawNews): any {\n    return this.dbRef.push(rawNews);\n  }\n\n  update(key: string, value: any): Promise<void> {\n    return this.dbRef.update(key, value);\n  }\n\n  delete(key: string): Promise<void> {\n    return this.dbRef.remove(key);\n  }\n\n  deleteAll(): Promise<void> {\n    return this.dbRef.remove();\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'S c A T';\n}\n","<!-- <app-create-news></app-create-news>\n<br><br>\n<app-view-all-news></app-view-all-news> -->\n\n\n<app-view-all-news></app-view-all-news>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFireDatabaseModule} from '@angular/fire/database';\nimport { environment } from '../environments/environment';\nimport { CreateNewsComponent } from './components/create-news/create-news.component';\n\nimport { FormsModule } from '@angular/forms';\nimport { ViewAllNewsComponent } from './components/view-all-news/view-all-news.component';\n\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule} from '@angular/material/list';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatMenuModule } from '@angular/material/menu';\n// Might want to remove the menu dependancy\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CreateNewsComponent,\n    ViewAllNewsComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    AngularFireModule.initializeApp(environment.firebaseConfig),\n    AngularFireDatabaseModule,\n\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatMenuModule,\n    MatCardModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatSidenavModule,\n    MatListModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class RawNews {\n    $key: string;\n    title = \"The Title goes here\";\n    body = \"The Body goes here\";\n    imageUrl = \"The Image Url goes here\";\n    articleUrl = \"The Activle Url goes here\";\n    source = \"The Source goes here\";\n    category = \"The Category goes here\";\n    date = \"The Date goes here\";\n}\n","import { Component, OnInit } from '@angular/core';\nimport { RawNewsService } from 'src/app/raw-news.service';\nimport { RawNews } from 'src/app/raw-news.model';\n\n@Component({\n  selector: 'app-create-news',\n  templateUrl: './create-news.component.html',\n  styleUrls: ['./create-news.component.css']\n})\nexport class CreateNewsComponent implements OnInit {\n  news: RawNews = new RawNews();\n  submitted = false;\n\n\n  constructor(private newsService: RawNewsService) { }\n\n  ngOnInit(): void {\n  }\n\n  saveNews(): void {\n    this.newsService.create(this.news).then(() => {\n      console.log('Created new item successfully!');\n      this.submitted = true;\n    });\n  }\n\n  newNews(): void {\n    this.submitted = false;\n    this.news = new RawNews();\n  }\n\n}\n","{{news.title}}\n<div class=\"submit-form\">\n    <div *ngIf=\"!submitted\">\n      <div class=\"form-group\">\n        <label for=\"title\">Title</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          id=\"title\"\n          required\n          [(ngModel)]=\"news.title\"\n          name=\"title\"\n          placeholder=\"{{news.title}}\"\n        />\n      </div>\n  \n      <div class=\"form-group\">\n        <label for=\"body\">Body</label>\n        <input\n          class=\"form-control\"\n          id=\"body\"\n          required\n          [(ngModel)]=\"news.body\"\n          name=\"body\"\n        />\n      </div>\n      <button (click)=\"saveNews()\" class=\"btn btn-success\">Submit</button>\n    </div>\n  \n    <div *ngIf=\"submitted\">\n      <h4>You submitted successfully!</h4>\n      <button class=\"btn btn-success\" (click)=\"newNews()\">Add</button>\n    </div>\n  </div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}