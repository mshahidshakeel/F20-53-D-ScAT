{"version":3,"sources":["./src/app/components/view-all-news/view-all-news.component.ts","./src/app/components/view-all-news/view-all-news.component.html","./src/environments/environment.ts","./src/app/raw-news.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/raw-news.model.ts","./src/app/components/create-news/create-news.component.ts","./src/app/components/create-news/create-news.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Component, OnInit, Input } from '@angular/core';\nimport { RawNewsService } from 'src/app/raw-news.service';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-view-all-news',\n  templateUrl: './view-all-news.component.html',\n  styleUrls: ['./view-all-news.component.css']\n})\nexport class ViewAllNewsComponent implements OnInit {\n  newsList: any;\n  channels = ['Dawn', 'DailyTimes'];\n\n  constructor(private newsService: RawNewsService) {\n      this.retrieveNews();\n  }\n\n  ngOnInit(): void {\n  }\n\n  retrieveNews(): void {\n    this.newsService.getAll().snapshotChanges().pipe(\n      map(changes =>\n        changes.map(c =>\n          ({ key: c.payload.key, ...c.payload.val() })\n        )\n      )\n    ).subscribe(data => {\n      this.newsList = data;\n    });\n  }\n\n  search(channel: string): void {\n    this.newsService.getChannel(channel).snapshotChanges().pipe(\n      map(changes =>\n        changes.map(c =>\n          ({ key: c.payload.key, ...c.payload.val() })\n        )\n      )\n    ).subscribe(data => {\n      this.newsList = data;\n      // window.location.reload();\n    });\n  }\n}\n","<mat-toolbar color=\"primary\">\n  <button mat-button (click)=\"sidenav.toggle()\">\n      <mat-icon aria-hidden=\"false\" aria-label=\"The menu button on nav\">menu</mat-icon>\n  </button>\n  <span>S c A T</span>\n</mat-toolbar>\n\n\n\n<mat-sidenav-container class=\"news-container\">\n  <mat-sidenav #sidenav class=\"news-sidenav\">\n    <mat-list class=\"list-nav\">\n        <mat-list-item class=\"list-item\" *ngFor=\"let channel of channels\" (click)=\"search(channel);sidenav.close();\">\n\n          <div mat-card-avatar [ngStyle]=\"{'background-image': 'url(../../../assets/' + channel + '.jpg)'}\" class=\"news-header-image\"></div>\n\n          <span class=\"source-name\"> {{channel}}</span>\n\n        </mat-list-item>\n    </mat-list>\n  </mat-sidenav>\n  <mat-card class=\"news-card\"  *ngFor=\"let news of newsList\">\n    <mat-card-header>\n      <div mat-card-avatar [ngStyle]=\"{'background-image': 'url(../../../assets/images/srcicon.png)'}\" class=\"news-header-image\"></div>\n      <mat-card-title class=\"title\">{{news.title}}</mat-card-title>\n      <mat-card-subtitle>{{news.imgUrl}}</mat-card-subtitle>\n    </mat-card-header>\n    <img mat-card-image class=\"img-article\" src={{news.imgUrl}} alt=\"\">\n    <mat-card-content>\n      <p>\n        {{news.body}}\n      </p>\n    </mat-card-content>\n    <mat-card-actions class=\"action-buttons\">\n      <button mat-button color=\"primary\"><mat-icon>thumb_up_alt</mat-icon> 12 Likes</button>\n      <button mat-button color=\"primary\"><mat-icon>comment</mat-icon> Comments</button>\n      <button mat-button color=\"primary\"><mat-icon>share</mat-icon> Share</button>\n    </mat-card-actions>\n  </mat-card>\n</mat-sidenav-container>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebaseConfig: {\n    apiKey: \"AIzaSyDWjiKzadOAPnb8nEj2hmKhkL9V86n-PH0\",\n    authDomain: \"f20-53-d-scat.firebaseapp.com\",\n    databaseURL: \"https://f20-53-d-scat.firebaseio.com\",\n    projectId: \"f20-53-d-scat\",\n    storageBucket: \"f20-53-d-scat.appspot.com\",\n    messagingSenderId: \"206426422746\",\n    appId: \"1:206426422746:web:f130267066f00a021e14e3\",\n    measurementId: \"G-9XQXMWXHSZ\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { AngularFireDatabase, AngularFireList } from '@angular/fire/database';\nimport { RawNews } from 'src/app/raw-news.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RawNewsService {\n  private dbRef: AngularFireList<RawNews> = null;\n  private dbDailyTimesRef: AngularFireList<RawNews> = null;\n\n  constructor(private db: AngularFireDatabase) {\n    // Extract Root Data\n    this.dbRef = this.db.list(\"/DailyTimes/Sport/2020-10-31 05:59:00\");\n    this.dbDailyTimesRef = this.db.list(\"/DailyTimes/Sports/2020-10-30 21:27:00\");\n   }\n\n   getAll(): AngularFireList<RawNews> {\n    return this.dbRef;\n  }\n\n  getChannel(channel: string): AngularFireList<RawNews> {\n    if (channel == \"DailyTimes\"){\n        return this.dbRef;\n    }\n    \n    return this.dbRef;\n    \n  }\n\n  create(rawNews: RawNews): any {\n    return this.dbRef.push(rawNews);\n  }\n\n  update(key: string, value: any): Promise<void> {\n    return this.dbRef.update(key, value);\n  }\n\n  delete(key: string): Promise<void> {\n    return this.dbRef.remove(key);\n  }\n\n  deleteAll(): Promise<void> {\n    return this.dbRef.remove();\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'S c A T';\n}\n","<!-- <app-create-news></app-create-news>\n<br><br>\n<app-view-all-news></app-view-all-news> -->\n\n\n<app-view-all-news></app-view-all-news>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFireDatabaseModule} from '@angular/fire/database';\nimport { environment } from '../environments/environment';\nimport { CreateNewsComponent } from './components/create-news/create-news.component';\n\nimport { FormsModule } from '@angular/forms';\nimport { ViewAllNewsComponent } from './components/view-all-news/view-all-news.component';\n\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule} from '@angular/material/list';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatMenuModule } from '@angular/material/menu';\n// Might want to remove the menu dependancy\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CreateNewsComponent,\n    ViewAllNewsComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    AngularFireModule.initializeApp(environment.firebaseConfig),\n    AngularFireDatabaseModule,\n\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatMenuModule,\n    MatCardModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatSidenavModule,\n    MatListModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class RawNews {\n    $key: string;\n    title = \"The Title goes here\";\n    body = \"The Body goes here\";\n    imageUrl = \"The Image Url goes here\";\n    articleUrl = \"The Activle Url goes here\";\n    source = \"The Source goes here\";\n    category = \"The Category goes here\";\n    date = \"The Date goes here\";\n}\n","import { Component, OnInit } from '@angular/core';\nimport { RawNewsService } from 'src/app/raw-news.service';\nimport { RawNews } from 'src/app/raw-news.model';\n\n@Component({\n  selector: 'app-create-news',\n  templateUrl: './create-news.component.html',\n  styleUrls: ['./create-news.component.css']\n})\nexport class CreateNewsComponent implements OnInit {\n  news: RawNews = new RawNews();\n  submitted = false;\n\n\n  constructor(private newsService: RawNewsService) { }\n\n  ngOnInit(): void {\n  }\n\n  saveNews(): void {\n    this.newsService.create(this.news).then(() => {\n      console.log('Created new item successfully!');\n      this.submitted = true;\n    });\n  }\n\n  newNews(): void {\n    this.submitted = false;\n    this.news = new RawNews();\n  }\n\n}\n","{{news.title}}\n<div class=\"submit-form\">\n    <div *ngIf=\"!submitted\">\n      <div class=\"form-group\">\n        <label for=\"title\">Title</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          id=\"title\"\n          required\n          [(ngModel)]=\"news.title\"\n          name=\"title\"\n          placeholder=\"{{news.title}}\"\n        />\n      </div>\n  \n      <div class=\"form-group\">\n        <label for=\"body\">Body</label>\n        <input\n          class=\"form-control\"\n          id=\"body\"\n          required\n          [(ngModel)]=\"news.body\"\n          name=\"body\"\n        />\n      </div>\n      <button (click)=\"saveNews()\" class=\"btn btn-success\">Submit</button>\n    </div>\n  \n    <div *ngIf=\"submitted\">\n      <h4>You submitted successfully!</h4>\n      <button class=\"btn btn-success\" (click)=\"newNews()\">Add</button>\n    </div>\n  </div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}